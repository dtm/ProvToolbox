

openapi: 3.0.1
info:
  title: the title
  description: My API
  contact:
    name: Fred
    url: http://gigantic-server.com
    email: Fred@gigagantic-server.com
  license:
    name: Apache 2.0
    url: http://foo.bar
  version: "0.0"
externalDocs:
  description: definition docs desc
security:
- req 1:
  - a
  - b
- req 2:
  - b
  - c
tags:
- name: provapi
  description: provenance api
  externalDocs:
    description: docs desc
- name: view
  description: browsing interface
  externalDocs:
    description: 'NOTE: /provapi is incorrect and should be /view'
paths:
  /provapi/validator:
    get:
      tags:
      - view
      summary: Validator entry point
      operationId: validator
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /provapi/translator:
    get:
      tags:
      - view
      summary: Translator entry point
      operationId: translator
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /provapi/documents/{docId}:
    get:
      tags:
      - provapi
      summary: Get Conceptual provenance document.  Use content negotiation to choose
        its representation
      description: 'Content negotiation is expected to specify which representationto
        produce.  This is a non-information resource. Note that types are enumerated
        here for convenience: these are the types of the ProvToolbox, in addition
        of text/html used to access an html landing page'
      operationId: actionTranslate_1
      parameters:
      - name: docId
        in: path
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: Accept header parameter
        schema:
          type: string
        example: text/html,application/json,text/provenance-notation,text/turtle,application/provenance+xml,application/trig,image/svg+xml,image/png,image/jpeg,application/pdf
      responses:
        200:
          description: OK
          content:
            text/html: {}
            application/json: {}
            text/provenance-notation: {}
            text/turtle: {}
            application/provenance+xml: {}
            application/trig: {}
            image/svg+xml: {}
            image/jpeg: {}
            image/png: {}
            application/pdf: {}
      
        404:
          description: Document not found
  /provapi/documents/{docId}/translation.html:
    get:
      tags:
      - view
      summary: Translation of a document into given representation
      description: No content negotiation allowed here
      operationId: actionTranslateLanding
      parameters:
      - name: docId
        in: path
        description: document id
        required: true
        schema:
          type: string
      responses:
        404:
          description: Document not found
  /provapi/documents/{docId}/validation/report.html:
    get:
      tags:
      - view
      summary: Validation Report --- html representation
      operationId: getValidationReportAsHtml
      parameters:
      - name: docId
        in: path
        required: true
        schema:
          type: string
      responses:
        404:
          description: Document not found
  /provapi/documents/{docId}/vis/{kind}:
    get:
      tags:
      - view
      summary: Translation of a document into given representation
      description: No content negotiation allowed here
      operationId: vis
      parameters:
      - name: docId
        in: path
        description: document id
        required: true
        schema:
          type: string
      - name: kind
        in: path
        description: visualization kind
        required: true
        schema:
          type: string
        example: hive,gantt,wheel
      responses:
        404:
          description: Document not found
  /provapi/api:
    get:
      tags:
      - view
      summary: API documentation
      operationId: getApiDescription
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /provapi/about:
    get:
      tags:
      - view
      summary: About Validator and PROV Service
      operationId: getAboutPage
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /provapi/contact:
    get:
      tags:
      - view
      summary: Contact details
      operationId: getContactPage
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /provapi/expander:
    get:
      tags:
      - view
      summary: Template expansion entry point
      operationId: expander
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /provapi/documents/{docId}.{type}:
    get:
      tags:
      - provapi
      summary: Representation of a document into given serialization format
      description: No content negotiation allowed here. From a deployment of the service
        to the next, the actual serialization may change as translator library (ProvToolbox)
        may change.
      operationId: actionTranslateAsType_1
      parameters:
      - name: docId
        in: path
        description: document id
        required: true
        schema:
          type: string
      - name: type
        in: path
        description: serialization type
        required: true
        schema:
          type: string
        example: json,ttl,provn,provx,rdf,trig,svg,png,pdf,jpg,jpeg
      responses:
        404:
          description: Document not found
  /provapi/documents/{docId}/original:
    get:
      tags:
      - provapi
      summary: Original document, as posted in its original representation
      description: No content negotiation allowed here. Mime type of result set to
        be the mime type of the original document.
      operationId: getOriginalDocumen_1
      parameters:
      - name: docId
        in: path
        description: document id
        required: true
        schema:
          type: string
      responses:
        404:
          description: Document not found
  /provapi/documents:
    post:
      tags:
      - provapi
      summary: Post a document. Payload is a form that may contain a file, prov statements
        or a url
      description: Post a document in a form; indicate if validation or translation
        required; and redirects to the appropriate page. This method  is also designed
        for browser interaction, allowing the user to select a file, a url or statements
        for provenance.  The user may specify validate or translate directly.
      operationId: submit
      parameters:
      - name: Accept
        in: header
        description: accept header parameter
        schema:
          type: string
      requestBody:
        description: form to be posted
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadForm'
      responses:
        404:
          description: Provenance not found
  /provapi/documents/{docId}/validation/normalForm:
    get:
      tags:
      - provapi
      summary: Document in normal form
      description: It is expected that validation has taken place.
      operationId: getNormalized
      parameters:
      - name: docId
        in: path
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: Accept header parameter
        schema:
          type: string
        example: application/json,text/provenance-notation,application/provenance+xml,image/svg+xml,image/png,image/jpeg,application/pdf
      responses:
        404:
          description: Document not found
  /provapi/documents/{docId}/validation/normalForm.{type}:
    get:
      tags:
      - provapi
      summary: Normal form of a document into given representation
      description: Validation expected to have taken place. No content negotiation
        allowed here
      operationId: getNormalFormAsType
      parameters:
      - name: docId
        in: path
        description: document id
        required: true
        schema:
          type: string
      - name: type
        in: path
        description: serialization type
        required: true
        schema:
          type: string
        example: ttl,provn,provx,json,rdf,trig,svg,png,pdf,jpg,jpeg
      responses:
        404:
          description: Document not found
  /provapi/documents/{docId}/validation/report:
    get:
      tags:
      - provapi
      summary: Validation Report
      description: Use content negotiation to select representation
      operationId: getValidationReport
      parameters:
      - name: docId
        in: path
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: Accept header parameter
        schema:
          type: string
        example: text/html,text/xml,application/xml
      responses:
        404:
          description: Document not found
  /provapi/documents/{docId}/validation/report.xml:
    get:
      tags:
      - provapi
      summary: Validation Report -- XML representation
      operationId: getValidationReportAsXml
      parameters:
      - name: docId
        in: path
        required: true
        schema:
          type: string
      responses:
        404:
          description: Document not found
  /provapi/documents/{docId}/validation/report/{part}:
    get:
      tags:
      - provapi
      summary: Validation Report Component
      operationId: getValidationReportComponent
      parameters:
      - name: docId
        in: path
        required: true
        schema:
          type: string
      - name: part
        in: path
        required: true
        schema:
          type: string
      responses:
        404:
          description: Document not found
  /provapi/documents2:
    post:
      tags:
      - provapi
      summary: Post a document, directly, redirect to the new resource
      description: This method is overloaded. It supports the direct posting of documents
        using a prov serialization, and it is also designed for browser interaction,
        allowing the user to select a file, a url or statements for provenance.  The
        user may specify validate or translate directly.
      operationId: submit2
      requestBody:
        description: input file in a prov serialization
        content:
          text/turtle:
            schema:
              type: object
          text/provenance-notation:
            schema:
              type: object
              example: document endDocument
          application/provenance+xml:
            schema:
              type: object
          application/trig:
            schema:
              type: object
          application/rdf+xml:
            schema:
              type: object
          application/json:
            schema:
              type: object
      responses:
        200:
          description: OK
          content:
            text/html: {}
            application/json: {}
            text/provenance-notation: {}
            text/turtle: {}
            application/provenance+xml: {}
            application/trig: {}
            image/svg+xml: {}
            image/jpeg: {}
            image/png: {}
            application/pdf: {}
        404:
          description: Provenance not found
  /provapi/documents3:
    post:
      tags:
      - provapi
      summary: Post a document. Payload is a form that may contain a file, prov statements
        or a url
      description: Post a document in a form; indicate if validation or translation
        required; and redirects to the appropriate page. This method  is also designed
        for browser interaction, allowing the user to select a file, a url or statements
        for provenance.  The user may specify validate or translate directly.
      operationId: submit3
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                url:
                  type: string
                  example: 'http://foo.com/'
                statements:
                  type: string
                file:
                  type: file
                translate:
                  type: string
                  enum:
                  - provn
                  - xml
      responses:
        404:
          description: Provenance not found
        415:
          description: Unsuported Media Type
  /provapi/documents4:
    post:
      tags:
      - provapi
      summary: Post a document. Payload is a form that may contain a file, prov statements
        or a url
      description: Post a document in a form; indicate if validation or translation
        required; and redirects to the appropriate page. This method  is also designed
        for browser interaction, allowing the user to select a file, a url or statements
        for provenance.  The user may specify validate or translate directly.
      operationId: submit4
      parameters:
      - name: url
        in: form
        example: 'http://foo.com/'
        type: string
      - name: 'statements'
        in: form
        type: string
      - name: file
        in: form
      - name: translate
        in: form
        enum:
          - provn
          - xml
      responses:
        200: OK
        404:
          description: Provenance not found
        415:
          description: Unsuported Media Type
  /provapi/documents/{docId}/validation/matrix:
    get:
      tags:
      - provapi
      summary: Event Matrix
      description: It is expected that validation has taken place; note that this
        is a non information resource and content negotiation should be used to retrieve
        a suitable representation.
      operationId: getMatrix
      parameters:
      - name: docId
        in: path
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: accept header parameter
        schema:
          type: string
        example: image/png,text/plain
      responses:
        404:
          description: Document not found
  /provapi/documents/{docId}/validation/matrix.txt:
    get:
      tags:
      - provapi
      summary: Event Matrix -- Text Representation
      description: It is expected that validation has taken place. No content negotiation
        applies here.
      operationId: getMatrixAsText
      parameters:
      - name: docId
        in: path
        required: true
        schema:
          type: string
      responses:
        404:
          description: Document not found
  /provapi/documents/{docId}/validation/matrix.png:
    get:
      tags:
      - provapi
      summary: Event Matrix -- Image Representation
      description: It is expected that validation has taken place. No content negotiation
        applies here.
      operationId: getMatrixAsPng
      parameters:
      - name: docId
        in: path
        required: true
        schema:
          type: string
      responses:
        404:
          description: Document not found
  /provapi/documents/{docId}/validation/matrix/diagonal:
    get:
      tags:
      - provapi
      summary: Event Matrix Diagonal
      description: No content negotiation applies here.
      operationId: getMatrixDiagonal
      parameters:
      - name: docId
        in: path
        required: true
        schema:
          type: string
      responses:
        404:
          description: Document not found
  /provapi/documents/{docId}/vis/hive:
    get:
      tags:
      - provapi
      summary: 'Visualization: hive plot'
      description: Redirects to visualization tool page
      operationId: visHive
      parameters:
      - name: docId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /provapi/documents/{docId}/vis/wheel:
    get:
      tags:
      - provapi
      summary: 'Visualization: wheel plot'
      description: Redirects to visualization tool page
      operationId: visWheel
      parameters:
      - name: docId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /provapi/documents/{docId}/vis/gantt:
    get:
      tags:
      - provapi
      summary: 'Visualization: gantt plot'
      description: Redirects to visualization tool page
      operationId: visGantt
      parameters:
      - name: docId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /provapi/documents/random/{nodes}/{degree}:
    get:
      tags:
      - provapi
      summary: Randomly generated Document
      operationId: getRandom
      parameters:
      - name: nodes
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: degree
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Accept
        in: header
        schema:
          type: string
      responses:
        404:
          description: Document not found
  /provapi/documents/random/{nodes}/{degree}/{seed}:
    get:
      tags:
      - provapi
      summary: Randomly generated Document
      operationId: getRandom_1
      parameters:
      - name: nodes
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: degree
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: seed
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Accept
        in: header
        description: Accept header parameter
        schema:
          type: string
        example: application/json,text/provenance-notation,application/provenance+xml,application/json,image/svg+xml,image/png,image/jpeg,application/pdf
      responses:
        404:
          description: Document not found
components:
  schemas:
    UploadForm:
      type: object
      properties:
        file:
          type: array
          items:
            type: string
            format: byte
        url:
          type: string
        statements:
          type: string
        type:
          type: string

